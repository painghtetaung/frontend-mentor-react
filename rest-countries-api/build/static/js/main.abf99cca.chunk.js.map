{"version":3,"sources":["GlobalStyle.js","API.js","components/FilterBar/FilterBar.Style.js","components/FilterBar/index.js","components/HeaderBar/HeaderBar.Style.js","components/HeaderBar/index.js","components/Home.js","hooks/useHomeFetch.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","base_api","apiSettings","fetchCountries","searchName","a","endpoint","fetch","then","res","ok","Error","json","filterCountries","regionName","Wrapper","styled","div","SearchBar","Filter","FilterBar","setSearchName","setRegionName","useState","inputName","setInputName","filterRegion","setFilterRegion","useEffect","timer","setTimeout","clearTimeout","className","type","placeholder","onChange","e","nameValue","currentTarget","value","name","regionValue","Header","header","Title","Mode","HeaderBar","Home","countries","setCountries","error","setError","fetchCountriesData","API","fetchFilterCountries","console","log","useHomeFetch","map","country","population","cca2","flags","region","capital","src","png","style","height","alt","common","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abf99cca.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle `\n\n\n:root {\n    font-size: 14px;\n}\n\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nimg {\n    max-width: 100%;\n}\n\nbody {\n    font-family: 'Nunito Sans', sans-serif;\n    background-color: hsl(207, 26%, 17%);\n    color: white;\n}\n\n.card {\n    background-color: hsl(209, 23%, 22%);\n    .ctitle {\n        font-weight: 800;\n    }\n   span.country-attri {\n       font-size: 1rem;\n       font-weight: 600;\n   }\n}\n\n@media screen and (min-width: 375px) {\n   .card-row {\n    justify-content: center;\n   }\n   .card {\n       width:50%;\n       height: 100%;\n       \n   }\n\n   .card-title {\n       font-size: 14px;\n   }\n\n   .country-attri {\n       font-size: 10px;\n   }\n\n   .card-text {\n       font-size: 11px;\n   }\n  }\n\n@media screen and (min-width: 576px) {\n   \n    .card {\n        width: 170px;\n        height: 300px;\n    }\n\n    .card-title {\n        font-size: 14px;\n    }\n\n    .country-attri {\n        font-size: 10px;\n    }\n\n    .card-text {\n        font-size: 11px;\n    }\n}\n\n \n\n\n`","const base_api = 'https://restcountries.com/v3.1/';\n\nconst apiSettings = {\n    fetchCountries: async(searchName) => {\n        const endpoint = searchName ?\n            `${base_api}name/${searchName}` :\n            `${base_api}all`;\n        return await (await fetch(endpoint)\n            .then((res) => {\n                if (!res.ok) {\n                    throw new Error(\"Country Not Found\")\n                } else {\n                    return res;\n                }\n\n            })\n        ).json();\n    },\n\n\n    filterCountries: async(regionName) => {\n        const endpoint = regionName === \"0\" || !regionName ? `${base_api}all` : `${base_api}region/${regionName}`;\n        return await (await fetch(endpoint)).json();\n    },\n\n    // filterCountries: async(regionName) => {\n    //     const endpoint = regionName ? `${base_api}region/${regionName}` : `${base_api}all`\n    //     return await (await fetch(endpoint)\n    //         .then((res) => {\n    //             if (!res.ok) {\n    //                 throw new Error(\"All regions\")\n    //             } else {\n    //                 return res;\n    //             }\n\n    //         })\n    //     ).json();\n    // },\n}\n\nexport default apiSettings;","import styled from \"styled-components\"\n\nexport const Wrapper = styled.div `\n    position: relative;\n\n`;\n\nexport const SearchBar = styled.div `\n  margin-bottom: 25px;\n  input {\n    background-color: hsl(209, 23%, 22%);\n    width: 100%;\n    color: hsl(0, 0%, 100%);\n    border: none;\n    padding-left: 50px;\n    border-radius: 6px;\n    height: 40px;\n    font-size: 10px;\n    \n    ::placeholder {\n    color: white;\n    opacity: 1;\n     \n  }\n  }\n \n  input:focus {\n        outline: none !important;\n        background-color: hsl(209, 23%, 22%);;\n    }\n\n  i.fa-search {\n    position: absolute;\n    font-size: 11px;\n    top: 15px;\n    left: 23px;\n  }\n`;\n\nexport const Filter = styled.div `\n    margin-bottom: 25px;\n    select {\n        width: 50%;\n        font-size: 10px;\n        height: 40px;\n        padding: 12px;\n        color: hsl(0, 0%, 100%);\n        border: none;\n        border-radius: 5px;\n        background-color: hsl(209, 23%, 22%);\n    }\n    select option {\n    border: none !important;\n    border-radius: 5px !important;\n    background-color: hsl(209, 23%, 22%);\n    color: #fff;\n  }\n\n  @media screen and (min-width: 576px) {\n    select {\n      width: 100%;\n    }\n    margin-left: 72px;\n    width: 190px;\n  }\n\n  \n`;","import React, { useState, useEffect } from 'react';\n\n//Styles\nimport { Wrapper, SearchBar, Filter } from './FilterBar.Style'\n\nconst FilterBar = ({setSearchName, setRegionName}) => {\n        const [inputName, setInputName] = useState('')\n\n        const [filterRegion, setFilterRegion] = useState('')\n\n        // var e = document.getElementById(\"filter\");\n        // var strUser = e.value;\n\n        const searchByName = (e) => {\n            const nameValue = e.currentTarget.value;\n            setInputName(nameValue);\n        }\n\n        const searchByRegion = (e) => {\n            const regionValue = e.currentTarget.value\n            setFilterRegion(regionValue)\n        }\n\n        useEffect(() => {\n            const timer = setTimeout(() => {\n                setSearchName(inputName);\n                setRegionName(filterRegion)\n              }, 300);\n            \n            return () => clearTimeout(timer)\n        }, [setSearchName, setRegionName, inputName, filterRegion])\n    return (\n        <Wrapper className=\"row justify-content-between\">\n            <SearchBar className=\"col-sm-6\">\n                <i className=\"fas fa-search\"></i>\n                    <input type=\"text\"\n                       \n                        placeholder=\"Search for a country...\"\n                        onChange={searchByName}\n                    />\n            </SearchBar>\n            <Filter className=\"col-sm-6\">\n                \n                <select name=\"select\" onChange={searchByRegion}>\n                \n                        <option value=\"0\">Filter by Region</option>\n                        <option value=\"Africa\">Africa</option>\n                        <option value=\"America\">America</option>\n                        <option value=\"Asia\">Asia</option>\n                        <option value=\"Europe\">Europe</option>\n                        <option value=\"Oceania\">Oceania</option>\n                </select>\n              \n            </Filter>\n        </Wrapper>\n    )\n}\n\nexport default FilterBar;","import styled from 'styled-components'\n\nexport const Header = styled.header `\n    background-color: hsl(209, 23%, 22%);\n    height: 50px;\n    margin-bottom: 20px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    p {\n        margin-bottom: 0px;\n    }\n\n`;\n\nexport const Title = styled.div `\n\n    p.title-text {\n        font-size: 13px;\n        font-weight: 800;\n    }\n\n`;\n\nexport const Mode = styled.div `\n    display: flex;\n    p.mode-text {\n        font-size: 11px;\n        font-weight: 300;\n    }\n    i.fa-moon {\n        margin-right: 6px;\n        font-size: 10px;\n        transform: rotate(-20deg)\n    }\n`;","import { Header, Title, Mode } from './HeaderBar.Style'\n\nconst HeaderBar = () => (\n    <Header className=\"container-fluid\">\n        <Title>\n            <p className=\"title-text\">Where in the world?</p>\n        </Title>\n\n        <Mode>\n            <i className=\"fas fa-moon\"></i>\n            <p className=\"mode-text\">Dark Mode</p>\n        </Mode>\n    </Header>\n)\n\nexport default HeaderBar;","import React from 'react';\n\n\n//hooks\nimport { useHomeFetch } from '../hooks/useHomeFetch'\n\n\n//Components\nimport FilterBar from './FilterBar';\nimport HeaderBar from './HeaderBar';\n\nconst Home = () => {\n    const { countries, setSearchName, setRegionName, error} = useHomeFetch()\n   \n   \n    return (\n        <>\n            <HeaderBar></HeaderBar>\n        <div className=\"container\"> \n            <FilterBar setSearchName={setSearchName} setRegionName={setRegionName}></FilterBar>\n           { countries &&\n                <div className=\"row card-row\">\n                {error && <div>Country Not Found</div>}\n                {/* {regionName === \"Select Region\" || !regionName ? <div>You haven't selected any region</div> : <div>Region: {regionName}</div>} */}\n                 {countries.map(country => {\n                     const { name, population, cca2, flags, region, capital } = country\n                     return (\n                         <div className=\"card col-sm-3 col-md-3 m-1 mb-5 p-0\" key={cca2}>\n                             <img src={flags.png} className=\"card-img-top p-0\" style={{ height: '100%' }} alt=\"...\" />\n                             <div className=\"card-body h-100 mt-3\">\n                                 <h5 className=\"card-title ctitle mb-3\">{name.common}</h5>\n                                 <p className=\"card-text mb-1\"><span className=\"country-attri\">Population:</span> {population}</p>\n                                 <p className=\"card-text mb-1\"><span className=\"country-attri\">Region:</span> {region}</p>\n                                 <p className=\"card-text mb-4\"><span className=\"country-attri\">Capital:</span> {capital}</p>\n                             </div>\n                         \n                         \n                         </div>\n                     )    \n                 })\n                     \n                 }\n                </div>\n           \n           }\n\n           \n        </div> \n        </>\n    )\n}\n\nexport default Home;","import { useState, useEffect } from 'react';\n\n// API\nimport API from '../API'\n\nexport const useHomeFetch = () => {\n\n    const [searchName, setSearchName] = useState('')\n    const [regionName, setRegionName] = useState('')\n    const [countries, setCountries] = useState([]);\n    const [error, setError] = useState(false)\n\n\n    const fetchCountriesData = async(searchName) => {\n        try {\n            setError(false)\n            const fetchCountries = await API.fetchCountries(searchName)\n            setCountries(fetchCountries);\n\n\n        } catch (err) {\n\n            setError(true)\n\n        }\n    }\n\n    const fetchFilterCountries = async(regionName) => {\n        try {\n            const filterCountries = await API.filterCountries(regionName)\n            setCountries(filterCountries) \n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    useEffect(() => {\n        fetchCountriesData(searchName)\n    }, [searchName]);\n\n    useEffect(() => {\n        fetchFilterCountries(regionName)\n    }, [regionName])\n\n    return { countries, setSearchName, setRegionName, regionName, error }\n}","import React from 'react'\nimport { GlobalStyle } from './GlobalStyle.js'\n\n\n//Components\nimport Home from './components/Home'\nconst App = () => {\n\n  return (\n    <>\n      \n      \n        <Home></Home>\n     \n      <GlobalStyle></GlobalStyle>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}